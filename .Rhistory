vcf.df$URL <- paste("http://reg.test.genome.network/allele?hgvs=",vcf.df$hgvsg,sep="")
returnDat <- as.data.frame(matrix(ncol = 7))
colnames(returnDat) <- c("Allele#","variantClinGenURL","hgvsg",
"varType","geneSymbol","chr","ref")
k <- 1
tempVCF <- vcf.df[i,]
urlTest <- httr::GET(handle = thisHandle,
path = gsub(thisHandle$url,"",tempVCF$URL),
encoding = "UTF-8", as = "text")
suppressMessages(
variant <- jsonlite::parse_json(urlTest)
)
progress(x = i, max = length(vcf.df$URL))
genes <- c()
variant$transcriptAlleles[[l]]
l <- 1
variant$transcriptAlleles[[l]]
variant$transcriptAlleles
variant$transcriptAlleles[[l]]
variant$transcriptAlleles[[l]]$hgvs
variant$transcriptAlleles[[l]]$hgvs[[1]]
l <- 2
variant$transcriptAlleles[[l]]$hgvs[[1]]
l <- 3
variant$transcriptAlleles[[l]]$hgvs[[1]]
l <- 4
variant$transcriptAlleles[[l]]$hgvs[[1]]
View(tempVCF)
variant$transcriptAlleles[[1]]
variant$transcriptAlleles[[1]]$MANE$nucleotide$RefSeq$hgvs
variant$transcriptAlleles[[1]]$MANE$protein$RefSeq$hgvs
devtools::load_all()
library(vcfR)
library(jsonlite)
library(httr)
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE158506_RAW/GSM4801807_2.somatic_variants_E48P1.vcf")
#Please enter one of hg18, hg19 or hg38
ref <- "hg38"
##### MAIN #####
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
devtools::load_all()
library(vcfR)
library(jsonlite)
library(httr)
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE158506_RAW/GSM4801807_2.somatic_variants_E48P1.vcf")
#Please enter one of hg18, hg19 or hg38
ref <- "hg38"
##### MAIN #####
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
i <- 606
vcf.df[i,]
vcf.df[607,]
i <- 606
thisHandle <- httr::handle("http://reg.test.genome.network/")
vcf.df$URL <- paste("http://reg.test.genome.network/allele?hgvs=",vcf.df$hgvsg,sep="")
returnDat <- as.data.frame(matrix(ncol = 7))
colnames(returnDat) <- c("Allele#","variantClinGenURL","hgvsg",
"varType","geneSymbol","chr","ref")
k <- 1
tempVCF <- vcf.df[i,]
urlTest <- httr::GET(handle = thisHandle,
path = gsub(thisHandle$url,"",tempVCF$URL),
encoding = "UTF-8", as = "text")
suppressMessages(
variant <- jsonlite::parse_json(urlTest)
)
progress(x = i, max = length(vcf.df$URL))
genes <- c()
for(l in c(1:length(variant$transcriptAlleles))){
genes <- c(genes,variant$transcriptAlleles[[l]]$geneSymbol)
returnDat[k,]$`Allele#` <- k
returnDat[k,]$variantClinGenURL <- tempVCF$URL
returnDat[k,]$hgvsg <- variant$transcriptAlleles[[1]]$MANE$nucleotide$RefSeq$hgvs
returnDat[k,]$geneSymbol <- paste(unique(genes),collapse=", ")
returnDat[k,]$varType <- tempVCF$TYPE
returnDat[k,]$chr <- tempVCF$CHROM
returnDat[k,]$ref <- ref
k <- k + 1
returnDat[k,]$`Allele#` <- k
returnDat[k,]$variantClinGenURL <- tempVCF$URL
returnDat[k,]$hgvsg <- variant$transcriptAlleles[[1]]$MANE$protein$RefSeq$hgvs
returnDat[k,]$geneSymbol <- paste(unique(genes),collapse=", ")
returnDat[k,]$varType <- tempVCF$TYPE
returnDat[k,]$chr <- tempVCF$CHROM
returnDat[k,]$ref <- ref
k <- k + 1
}
genes <- paste(unique(genes),collapse = ", ")
for(j in c(1:length(variant$genomicAlleles))){
returnDat[k,]$`Allele#` <- k
returnDat[k,]$variantClinGenURL <- tempVCF$URL
returnDat[k,]$hgvsg <- variant$genomicAlleles[[j]]$hgvs[[1]]
returnDat[k,]$geneSymbol <- genes
returnDat[k,]$varType <- tempVCF$TYPE
returnDat[k,]$chr <- tempVCF$CHROM
returnDat[k,]$ref <- ref
k <- k ++ 1
}
returnDat
View(returnDat)
variant$transcriptAlleles[[1]]$MANE$protein$RefSeq$hgvs
variant$transcriptAlleles[[1]]
variant$transcriptAlleles[[4]]
variant$transcriptAlleles[[5]]
variant$transcriptAlleles[[5]]$MANE$nucleotide$RefSeq
variant$transcriptAlleles[[5]]$MANE$nucleotide$RefSeq$hgvs
for(l in c(1:length(variant$transcriptAlleles))){
print(l)
genes <- c(genes,variant$transcriptAlleles[[l]]$geneSymbol)
returnDat[k,]$`Allele#` <- k
returnDat[k,]$variantClinGenURL <- tempVCF$URL
returnDat[k,]$hgvsg <- variant$transcriptAlleles[[1]]$MANE$nucleotide$RefSeq$hgvs
returnDat[k,]$geneSymbol <- paste(unique(genes),collapse=", ")
returnDat[k,]$varType <- tempVCF$TYPE
returnDat[k,]$chr <- tempVCF$CHROM
returnDat[k,]$ref <- ref
k <- k + 1
returnDat[k,]$`Allele#` <- k
returnDat[k,]$variantClinGenURL <- tempVCF$URL
returnDat[k,]$hgvsg <- variant$transcriptAlleles[[1]]$MANE$protein$RefSeq$hgvs
returnDat[k,]$geneSymbol <- paste(unique(genes),collapse=", ")
returnDat[k,]$varType <- tempVCF$TYPE
returnDat[k,]$chr <- tempVCF$CHROM
returnDat[k,]$ref <- ref
k <- k + 1
}
l <- 5
variant$transcriptAlleles[[l]]$MANE$nucleotide$RefSeq$hgvs
devtools::load_all()
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
concepts.df <- addConcepts(alleles.df, concepts)
View(alleles.df)
View(concepts.df)
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_10_AST.vcf")
#Please enter one of hg18, hg19 or hg38
ref <- "hg19"
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
concepts.df <- addConcepts(alleles.df, concepts)
library(vcfR)
library(jsonlite)
library(httr)
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_10_AST.vcf")
#Please enter one of hg18, hg19 or hg38
ref <- "hg19"
##### MAIN #####
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
concepts.df <- addConcepts(alleles.df, concepts)
View(vcf.df)
View(concepts)
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_11_ASN.vcf")
#Please enter one of hg18, hg19 or hg38
ref <- "hg19"
##### MAIN #####
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
concepts.df <- addConcepts(alleles.df, concepts)
View(alleles.df)
devtools::load_all()
View(alleles.df)
devtools::load_all()
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_11_ASN.vcf")
#Please enter one of hg18, hg19 or hg38
ref <- "hg19"
##### MAIN #####
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
concepts.df <- addConcepts(alleles.df, concepts)
View(alleles.df)
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_12_AST.vcf")
#Please enter one of hg18, hg19 or hg38
ref <- "hg19"
##### MAIN #####
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
concepts.df <- addConcepts(alleles.df, concepts)
View(alleles.df)
test_prot <- concepts[grepl("NP_",concepts$concept_synonym_name),]
test_prot[sample(x = 24785, size = 100, replace = F)]
test_prot[sample(x = 24785, size = 100, replace = F),]
test_prot_red <- test_prot[sample(x = 24785, size = 100, replace = F),]
test_prot_red$URL <- paste("http://reg.test.genome.network/allele?hgvs=",
test_prot_red$concept_synonym_name,sep="")
httr::GET(test_prot_red[1,]$URL)
jsonlite::parse_json(httr::GET(test_prot_red[1,]$URL))
prot_temp <- jsonlite::parse_json(httr::GET(test_prot_red[1,]$URL))
prot_temp$aminoAcidAlleles
View(test_prot_red)
test_prot_red$matchingVariant <- ""
for(i in c(1:100)){
prot_temp <- jsonlite::parse_json(httr::GET(test_prot_red[i,]$URL))
test_prot_red[i,]$matchingVariant <- prot_temp$aminoAcidAlleles[[1]]$hgvsMatchingTranscriptVariant
}
for(i in c(1:100)){
print(i)
prot_temp <- jsonlite::parse_json(httr::GET(test_prot_red[i,]$URL))
test_prot_red[i,]$matchingVariant <- prot_temp$aminoAcidAlleles[[1]]$hgvsMatchingTranscriptVariant
}
results <- test_prot_red[0,]
for(i in c(1:100)){
print(i)
suppressWarnings(
prot_temp <- jsonlite::parse_json(httr::GET(test_prot_red[i,]$URL))
)
for(j in c(1:length(prot_temp$aminoAcidAlleles[[1]]$hgvsMatchingTranscriptVariant))){
results[k,c(1:4)] <- test_prot_red[i,c(1:4)]
results[k,]$matchingVariant <- prot_temp$aminoAcidAlleles[[1]]$hgvsMatchingTranscriptVariant[j,]
k <- k+1
}
}
test_prot_red$matchingVariant <- ""
results <- test_prot_red[0,]
k <- 1
for(i in c(1:100)){
print(i)
suppressWarnings(
prot_temp <- jsonlite::parse_json(httr::GET(test_prot_red[i,]$URL))
)
for(j in c(1:length(prot_temp$aminoAcidAlleles[[1]]$hgvsMatchingTranscriptVariant))){
results[k,c(1:4)] <- test_prot_red[i,c(1:4)]
results[k,]$matchingVariant <- prot_temp$aminoAcidAlleles[[1]]$hgvsMatchingTranscriptVariant[j,]
k <- k+1
}
}
for(i in c(1:100)){
print(i)
suppressWarnings(
prot_temp <- jsonlite::parse_json(httr::GET(test_prot_red[i,]$URL))
)
for(j in c(1:length(prot_temp$aminoAcidAlleles[[1]]$hgvsMatchingTranscriptVariant))){
results[k,c(1:4)] <- test_prot_red[i,c(1:4)]
results[k,]$matchingVariant <- prot_temp$aminoAcidAlleles[[1]]$hgvsMatchingTranscriptVariant[j]
k <- k+1
}
}
View(results)
View(concepts)
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref)
concepts.df <- addConcepts(alleles.df, concepts)
View(concepts.df)
View(alleles.df)
alleles.df <- processClinGen(vcf.df,ref,generateAll = T)
devtools::load_all()
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref,generateAll = T)
concepts.df <- addConcepts(alleles.df, concepts)
vcf.df <- processVCF(vcf)
vcf.df <- vcf.df[1:200,]
vcf.df <- processVCF(vcf)
vcf.df <- vcf.df[1:200,]
View(vcf.df)
dim(vcf.df)
vcf.df <- processVCF(vcf)
if(dim(vcf.df)[1] > 100){
vcf.df <- vcf.df[sample(x = dim(vcf.df)[1], size = 100, replace = F),]
}
#Please enter one of hg18, hg19, hg38 or "auto"
ref <- "hg38"
if(ref %in% c("hg18","hg19","hg38")){
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref,generateAll = T)
concepts.df <- addConcepts(alleles.df, concepts)
} else if(ref == "auto"){
vcf.df <- processVCF(vcf)
if(dim(vcf.df)[1] > 100){
vcf.df <- vcf.df[sample(x = dim(vcf.df)[1], size = 100, replace = F),]
}
ref.hg18 <- read.csv(paste(here::here("data/reference/"),"/","hg18",".csv",sep=""))[,-1]
ref.hg19 <- read.csv(paste(here::here("data/reference/"),"/","hg19",".csv",sep=""))[,-1]
ref.hg38 <- read.csv(paste(here::here("data/reference/"),"/","hg38",".csv",sep=""))[,-1]
vcf.hg18 <- generateHGVSG(vcf = vcf.df, ref = ref.hg18)
vcf.hg19 <- generateHGVSG(vcf = vcf.df, ref = ref.hg19)
vcf.hg38 <- generateHGVSG(vcf = vcf.df, ref = ref.hg38)
alleles.hg18 <- processClinGen(vcf.df,"hg18",generateAll = T)
alleles.hg19 <- processClinGen(vcf.df,"hg19",generateAll = T)
alleles.hg38 <- processClinGen(vcf.df,"hg38",generateAll = T)
}
View(alleles.df)
ref.hg18 <- read.csv(paste(here::here("data/reference/"),"/","hg18",".csv",sep=""))[,-1]
ref.hg19 <- read.csv(paste(here::here("data/reference/"),"/","hg19",".csv",sep=""))[,-1]
ref.hg38 <- read.csv(paste(here::here("data/reference/"),"/","hg38",".csv",sep=""))[,-1]
vcf.hg18 <- generateHGVSG(vcf = vcf.df, ref = ref.hg18)
vcf.hg19 <- generateHGVSG(vcf = vcf.df, ref = ref.hg19)
vcf.hg38 <- generateHGVSG(vcf = vcf.df, ref = ref.hg38)
alleles.hg18 <- processClinGen(vcf.df,"hg18",generateAll = T)
alleles.hg19 <- processClinGen(vcf.df,"hg19",generateAll = T)
alleles.hg38 <- processClinGen(vcf.df,"hg38",generateAll = T)
ref.hg18 <- read.csv(paste(here::here("data/reference/"),"/","hg18",".csv",sep=""))[,-1]
ref.hg19 <- read.csv(paste(here::here("data/reference/"),"/","hg19",".csv",sep=""))[,-1]
ref.hg38 <- read.csv(paste(here::here("data/reference/"),"/","hg38",".csv",sep=""))[,-1]
vcf.hg18 <- generateHGVSG(vcf = vcf.df, ref = ref.hg18)
vcf.hg19 <- generateHGVSG(vcf = vcf.df, ref = ref.hg19)
vcf.hg38 <- generateHGVSG(vcf = vcf.df, ref = ref.hg38)
alleles.hg18 <- processClinGen(vcf.hg18,"hg18",generateAll = T)
alleles.hg19 <- processClinGen(vcf.hg19,"hg19",generateAll = T)
alleles.hg38 <- processClinGen(vcf.hg38,"hg38",generateAll = T)
resultLength <- c(dim(alleles.hg18)[1],dim(alleles.hg19)[1],dim(alleles.hg38)[1])
max(resultLength)
which.max(resultLength)
ref <- c("hg18","hg19","hg38")[which.max(resultLength)]
ref
ref.df <- loadReference(ref = "hg19")
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
ref.df1 <- loadReference(ref = "hg19")
ref.df <- read.csv(paste(here::here("data/reference/"),"/",ref,".csv",sep=""))[,-1]
View(ref.df)
View(ref.df1)
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_12_AST.vcf")
#Please enter one of hg18, hg19, hg38 or "auto"
ref <- "hg19"
##### MAIN #####
if(ref == "auto"){
#Automatic mode - sampling and testing
vcf.df <- processVCF(vcf)
if(dim(vcf.df)[1] > 100){
vcf.df <- vcf.df[sample(x = dim(vcf.df)[1], size = 100, replace = F),]
}
ref.hg18 <- loadReference("hg18")
ref.hg19 <- loadReference("hg19")
ref.hg38 <- loadReference("hg38")
vcf.hg18 <- generateHGVSG(vcf = vcf.df, ref = ref.hg18)
vcf.hg19 <- generateHGVSG(vcf = vcf.df, ref = ref.hg19)
vcf.hg38 <- generateHGVSG(vcf = vcf.df, ref = ref.hg38)
alleles.hg18 <- processClinGen(vcf.hg18,"hg18",generateAll = T)
alleles.hg19 <- processClinGen(vcf.hg19,"hg19",generateAll = T)
alleles.hg38 <- processClinGen(vcf.hg38,"hg38",generateAll = T)
#Find reference genome
resultLength <- c(dim(alleles.hg18)[1],dim(alleles.hg19)[1],dim(alleles.hg38)[1])
#Set reference genome
ref <- c("hg18","hg19","hg38")[which.max(resultLength)]
}
ref.df <- loadReference(ref)
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref,generateAll = T)
concepts.df <- addConcepts(alleles.df, concepts)
View(alleles.hg38)
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_12_AST.vcf")
#Please enter one of hg18, hg19, hg38 or "auto"
ref <- "hg19"
##### MAIN #####
if(ref == "auto"){
#Automatic mode - sampling and testing
vcf.df <- processVCF(vcf)
if(dim(vcf.df)[1] > 100){
vcf.df <- vcf.df[sample(x = dim(vcf.df)[1], size = 100, replace = F),]
}
ref.hg18 <- loadReference("hg18")
ref.hg19 <- loadReference("hg19")
ref.hg38 <- loadReference("hg38")
vcf.hg18 <- generateHGVSG(vcf = vcf.df, ref = ref.hg18)
vcf.hg19 <- generateHGVSG(vcf = vcf.df, ref = ref.hg19)
vcf.hg38 <- generateHGVSG(vcf = vcf.df, ref = ref.hg38)
alleles.hg18 <- processClinGen(vcf.hg18,"hg18",generateAll = T)
alleles.hg19 <- processClinGen(vcf.hg19,"hg19",generateAll = T)
alleles.hg38 <- processClinGen(vcf.hg38,"hg38",generateAll = T)
#Find reference genome
resultLength <- c(dim(alleles.hg18)[1],dim(alleles.hg19)[1],dim(alleles.hg38)[1])
#Set reference genome
ref <- c("hg18","hg19","hg38")[which.max(resultLength)]
}
ref.df <- loadReference(ref)
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref,generateAll = T)
concepts.df <- addConcepts(alleles.df, concepts)
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_12_AST.vcf")
#Please enter one of hg18, hg19, hg38 or "auto"
ref <- "hg19"
#Please indicate whether or not you would like to return all transcript alleles
generateTranscripts <- "FALSE"
##### MAIN #####
if(ref == "auto"){
#Automatic mode - sampling and testing
vcf.df <- processVCF(vcf)
if(dim(vcf.df)[1] > 100){
vcf.df <- vcf.df[sample(x = dim(vcf.df)[1], size = 100, replace = F),]
}
ref.hg18 <- loadReference("hg18")
ref.hg19 <- loadReference("hg19")
ref.hg38 <- loadReference("hg38")
vcf.hg18 <- generateHGVSG(vcf = vcf.df, ref = ref.hg18)
vcf.hg19 <- generateHGVSG(vcf = vcf.df, ref = ref.hg19)
vcf.hg38 <- generateHGVSG(vcf = vcf.df, ref = ref.hg38)
alleles.hg18 <- processClinGen(vcf.hg18,"hg18",generateAll = T)
alleles.hg19 <- processClinGen(vcf.hg19,"hg19",generateAll = T)
alleles.hg38 <- processClinGen(vcf.hg38,"hg38",generateAll = T)
#Find reference genome
resultLength <- c(dim(alleles.hg18)[1],dim(alleles.hg19)[1],dim(alleles.hg38)[1])
#Set reference genome
ref <- c("hg18","hg19","hg38")[which.max(resultLength)]
}
ref.df <- loadReference(ref)
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref,generateAll = generateTranscripts)
concepts.df <- addConcepts(alleles.df, concepts)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(KOIOS)
devtools::load_all()
library(KOIOS)
##### INPUT #####
#Load concept library
concepts <- loadConcepts()
#Input VCF
vcf <- loadVCF(userVCF = "Test VCF/GSE142442_RAW/GSE142442_12_AST.vcf")
#Please enter one of hg18, hg19, hg38 or "auto"
ref <- "auto"
#Please indicate whether or not you would like to return all transcript alleles
generateTranscripts <- "FALSE"
##### MAIN #####
#Automatic mode - sampling and testing
if(ref == "auto"){
ref <- findReference(vcf)
}
ref.df <- loadReference(ref)
vcf.df <- processVCF(vcf)
vcf.df <- generateHGVSG(vcf = vcf.df, ref = ref.df)
alleles.df <- processClinGen(vcf.df,ref,generateAll = generateTranscripts)
concepts.df <- addConcepts(alleles.df, concepts)
View(alleles.df)
library(KOIOS)
roxygen2::roxygenise()
library(KOIOS)
View(alleles.hg18)
View(alleles.hg19)
View(alleles.hg18)
View(alleles.hg18)
View(alleles.hg38)
install.packages("BSGenomes")
BiocManager::install("BSGenomes")
BiocManager::install("BSgenome")
install.packages(c("cli", "dplyr", "fs", "jsonlite", "Rcpp", "reticulate", "rlang", "vctrs"))
install.packages(c("boot", "class", "codetools", "foreign", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "spatial", "survival"), lib="C:/Program Files/R/R-4.2.2/library")
install.packages(c("cli", "dplyr", "fs", "jsonlite", "Rcpp", "reticulate", "rlang", "vctrs"))
install.packages(c("cli", "dplyr", "fs", "jsonlite", "Rcpp", "reticulate", "rlang", "vctrs"))
install.packages(c("cli", "dplyr", "fs", "jsonlite", "Rcpp", "reticulate", "rlang", "vctrs"))
install.packages(c("cli", "dplyr", "fs", "jsonlite", "Rcpp", "reticulate", "rlang", "vctrs"))
